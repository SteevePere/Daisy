# # to build custom images
#
# variables:
#   REGISTRY: 192.168.34.25:5002
#
# stages:
#   - pre-build
#
# build:
#   image: docker:latest
#   stage: pre-build
#   services:
#   - name: docker:dind
#     command: ["--insecure-registry", "192.168.34.25:5002"]
#   script:
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $REGISTRY
#     - docker build -t $REGISTRY/daisy/daisy/prod_db .
#     - docker push $REGISTRY/daisy/daisy/prod_db

# -------------------------------------------------------------

variables:
  MY_TOKEN: CwrBSsUcVFKfEYz-mtyx
  REGISTRY: 192.168.34.25:5002
  SSH_PROD: ssh root@192.168.34.29

image: $REGISTRY/daisy/daisy:latest
#
stages:
  - lint
  - test
  - check security
  - build
  - deploy

linting:
  stage: lint
  script:
    - pip install pylint
    - pylint app/app.py

unit testing:
  stage: test
  services:
    - mysql:5.7
  variables:
    MYSQL_DATABASE: Daisy
    MYSQL_ROOT_PASSWORD: Makaveli
  script:
    - apt-get -y update
    - apt-get -y upgrade
    - apt-get -y install mysql-client
    - mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" --host=mysql Daisy < app/data/employees.sql
    - python app/test_one.py

security testing:
  stage: check security
  script:
    - pip install bandit
    - bandit app/app.py

building:
  stage: build
  services:
  - name: docker:dind
    command: ["--insecure-registry", "192.168.34.25:5002"]
  script:
    - docker login -u root -p $MY_TOKEN $REGISTRY
    - docker build -t $REGISTRY/daisy/daisy/prod .
    - docker push $REGISTRY/daisy/daisy/prod

deploying to production:
  only:
    - master
  image: debian:latest
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$MY_SSH_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - $SSH_PROD docker rm --force app
    - $SSH_PROD docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $REGISTRY
    - $SSH_PROD docker pull $REGISTRY/daisy/daisy/prod:latest
    - $SSH_PROD docker run --name app --link mysql:mysql -d -p 5001:5001 $REGISTRY/daisy/daisy/prod:latest
    - $SSH_PROD docker logout $REGISTRY
